[defaults]
# I do not want to gather facts - my script is designed to run on
# localhost - I don't give a damn about no facts
gathering = explicit

# If it doesn't work theres a problem that needs to be solved - running the
# same failing comand again, doesn't semm to do anything good for me (we're
# on Mac - Not Windblows).
retry_files_enabled = False

# I'll allow undefined vars - this allows me to use the default() filter
# like this:
#
# vars_files:
#   - "{{ manuscript | default('./manuscripts/test.yml')}}"
error_on_undefined_vars = False

# Even I could just define my host in the Ansible script - since I'm stuck
# to local host. Ansible stil warns me that there isn't a host file defined
# So even if I don't strictly need it - ill define it - just to silence the
# warning
inventory = ./hosts

# I'll allow the individual task to determine if sudo is needed or not
# So a configuration like this is allowed:
#
# installs:
#   -
#     module: test
#     parameters:
#       path:   /etc/paths
#       state:  present
#       regexp: /usr/local/bin
#       insertafter: BOF
#       line:   /usr/local/bin
#     become: yes
#
# When a task need to become sudo - it should ask for the password (...or you
# should execute your playbook with the -bK  parameter if you want the script
# to run automatically)
# ask_sudo_pass = True

# Deprecation warnings are turned off since I want to run my tasks with
# unspecified variables like this (it {{ item.parameters }} that's deprecated):
#
#   tasks:
#    - name: Task example
#      some_module:
#        "{{ item.parameters }}"
#      become: "{{ item.become | default('false')}}"
#      with_items: "{{ some_list }}"
#
# Apparently this is considered unsafe and it was deprecated in v2.0 and
# supposed to be removed in v2.2. But I'm currently on version v2.7 and it
# still works - and it bloody well should!
# So I'm silencing the deprecation warning
deprecation_warnings = False
